apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  labels:
    app.kubernetes.io/instance: hello-world
    app.kubernetes.io/name: hello-world
    pipeline.openshift.io/runtime: java
    pipeline.openshift.io/runtime-version: openjdk-11-el7
    pipeline.openshift.io/type: kubernetes
  name: hello-world
  namespace: hello-world
spec:
  params:
    - default: hello-world
      name: APP_NAME
      type: string
    - default: 'https://github.com/cmays20/hello-world'
      name: GIT_REPO
      type: string
    - default: master
      name: GIT_REVISION
      type: string
    - default: 'quay.io/cmays20/hello-world'
      name: IMAGE_NAME
      type: string
    - default: .
      name: PATH_CONTEXT
      type: string
    - default: openjdk-11-el7
      name: VERSION
      type: string
    - default: 'maven:3-openjdk-11-slim'
      name: MAVEN_IMAGE
      type: string
    - default: 'https://github.com/cmays20/hello-world-deploy'
      name: MANIFEST_GIT_REPO
      type: string
    - name: MANIFEST_WORKING_DIR
      type: string
  tasks:
    - name: fetch-repository
      params:
        - name: url
          value: $(params.GIT_REPO)
        - name: revision
          value: $(params.GIT_REVISION)
        - name: subdirectory
          value: ''
        - name: deleteExisting
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: workspace
    - name: maven-build
      params:
        - name: MAVEN_IMAGE
          value: $(params.MAVEN_IMAGE)
        - name: GOALS
          value:
            - verify
      runAfter:
        - fetch-repository
      taskRef:
        kind: Task
        name: maven-with-cache
      workspaces:
        - name: source
          workspace: workspace
        - name: maven-repo
          workspace: maven-repo
        - name: maven-settings
          workspace: maven-settings
    - name: build-image
      params:
        - name: IMAGE
          value: $(params.IMAGE_NAME):$(params.GIT_REVISION)
        - name: CONTEXT
          value: $(params.PATH_CONTEXT)
      runAfter:
        - maven-build
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: workspace
    - name: fetch-manifest-repository
      params:
        - name: url
          value: $(params.MANIFEST_GIT_REPO)
        - name: subdirectory
          value: ''
        - name: deleteExisting
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: manifest-workspace
    - name: manifest-update-image
      params:
        - name: WORKING_DIR
          value: $(params.MANIFEST_WORKING_DIR)
        - name: NEW_IMAGE
          value: $(params.IMAGE_NAME):$(params.GIT_REVISION)
      taskRef:
        kind: Task
        name: kustomize-update-image
      runAfter:
        - fetch-manifest-repository
        - build-image
      workspaces:
        - name: output
          workspace: manifest-workspace
    - name: git-commit
      params:
        - name: GIT_USER_NAME
          value: 'cmays20'
        - name: GIT_USER_EMAIL
          value: 'cmays@outlook.com'
        - name: GIT_SCRIPT
          value: |
            git add $(params.MANIFEST_WORKING_DIR)/kustomization.yaml
            git commit -m "[$(context.taskRun.name)] Image tag updated"
            git remote add basic-auth-origin $(params.MANIFEST_GIT_REPO)
            git push basic-auth-origin HEAD:main
      taskRef:
        kind: ClusterTask
        name: git-cli
      runAfter:
        - manifest-update-image
      workspaces:
        - name: source
          workspace: manifest-workspace
        - name: basic-auth
          workspace: git-config
  workspaces:
    - name: workspace
    - name: manifest-workspace
    - name: maven-repo
    - name: maven-settings
    - name: git-config
